package biz.evlampiy.biz.evlampiy.kotlincourse.lesson6

fun main () {
println(seasonOfTheYear(month))
}


//Задание 1: "Определение Сезона"
//Контекст: Напишите функцию, которая на основе номера месяца возвращает сезон года.
val month = 12
fun seasonOfTheYear (month: Int): String {
    return when {
        month in 1..2 || month == 12 -> "Winter"
        month in 3..5 -> "Spring"
        month in 6..8 -> "Summer"
        month in 9..11 -> "Autumn"
        else -> "Ty na kakoi planete zhivyosh???"
    }
}

//Задание 2: "Расчет Возраста Питомца"
//Контекст: Создайте функцию, которая преобразует возраст собаки в "человеческие" годы. До 2 лет каждый год собаки равен
//10.5 человеческим годам, после - каждый год равен 4 человеческим годам.
val pupAge = 20.0
fun pupAgeIntoHumanAge (pupAge: Double): Double? {
    return if (pupAge <= 0.0)  null
    else if (pupAge in 0.1..2.0)  pupAge * 10.5
    else  (pupAge - 2) * 4 + 21
}

//Задание 3: "Определение Вида Транспорта"
//Контекст: Напишите функцию, которая определяет, какой вид транспорта лучше использовать, исходя из длины маршрута.
//Если маршрут до 1 км - "пешком", до 5 км - "велосипед", иначе - "автотранспорт".
val distance = 3.0
fun getVehicleType (distance: Double): String {
    return when {
        distance <= 0.0 -> "Сиди дома, умник"
        distance in 0.0..1.0 -> "Пешком"
        distance in 1.0..5.0 -> "Велосипед"
        else -> "Автотранспорт"
    }
}

//Задание 4: "Расчет Бонусных Баллов"
//Контекст: Клиенты интернет-магазина получают бонусные баллы за покупки. Напишите функцию, которая принимает сумму
//покупки и возвращает количество бонусных баллов: 2 балла за каждые 100 рублей при сумме покупки до 1000 рублей и 5
//баллов за каждые 100 рублей при сумме свыше этого.
val price = 11
fun getBonusPoints (price: Int): Int {
    return if (price < 100) 0
    else if (price in 100..1000) price / 100 * 2
    else price / 100 * 5

}

//Задание 5: "Определение Типа Документа"
//Контекст: В системе хранения документов каждый файл имеет расширение. Напишите функцию, которая на основе расширения
//файла возвращает его тип: "Текстовый документ", "Изображение", "Таблица" или "Неизвестный тип".
val fileExtension = ".jpg"
fun fileType (fileExtension: String): String {
    return when (fileExtension) {
        in ".txt", ".docx", ".doc" -> "Текстовый документ"
        in ".jpg", ".png", ".tiff" -> "Изображение"
        ".xml" -> "Таблица"
        else -> "Неизвестный тип"
    }
}

//Задание 6: "Конвертация Температуры"
//Контекст: Создайте функцию, которая конвертирует температуру из градусов Цельсия в Фаренгейты и наоборот в зависимости
//от указанной единицы измерения (C/F). Единицу измерения нужно передать вторым аргументом функции. Несколько аргументов
//передаются через запятую. Возвращать нужно строку.
//Подсказка: для генерации строки из числа и буквы можно использовать шалон “$result F” для фаренгейта или “$result C”
//для цельсия
val temp = 90.0
val unit = 'F'
fun tempConvert (temp: Double, unit: Char): String {
   return if (unit == 'C') {
       val result = temp * 1.8 + 32
       "$result F"
   }
       else if (unit == 'F') {
           val result = (temp - 32) / 1.8
       "$result C"
       }
    else {
        "Wrong data"
    }
}

//Задание 7: "Подбор Одежды по Погоде"
//Контекст: Напишите функцию, которая на основе температуры воздуха рекомендует тип одежды: "куртка и шапка" при
// температуре ниже 0, "ветровка" от 0 до 15 градусов и "футболка и шорты" при температуре выше 15. При температурах
// ниже -30 и выше +35 рекомендуйте не выходить из дома.
val temperature = 17
fun whatToWear (temperature: Int): String {
    return when (temperature) {
        in -30 until 0 -> "Куртка и шапка"
        in 0..15 -> "Ветровка"
        in 16..35 -> "Футболка и шорты"
        else -> "Не рекомендуется выходить из дома"
    }
}

//Задание 8: "Выбор Фильма по Возрасту"
//Контекст: Кинотеатр предлагает фильмы разных возрастных категорий. Напишите функцию, которая принимает возрастзрителя
//и возвращает доступные для него категории фильмов: "детские", "подростковые", "18+".
val age = 7
fun ageRestriction (age: Int): String? {
    return if (age in 0 until 12) "Детские"
    else if (age in 12 until 18) "Подростковые"
    else if (age >= 18) "18+"
    else null
}
